using System;
using System.Collections.Generic;
using Newtonsoft.Json;

namespace AgentOrchestration.Models
{
    /// <summary>
    /// Represents a marketing campaign with its components and execution state
    /// </summary>
    public class Campaign
    {
        public string Id { get; set; } = Guid.NewGuid().ToString();
        public string Name { get; set; } = string.Empty;
        public string Goal { get; set; } = string.Empty;
        public string Audience { get; set; } = string.Empty;
        public List<string> Components { get; set; } = new();
        public CampaignStatus Status { get; set; } = CampaignStatus.Draft;
        public DateTime CreatedAt { get; set; } = DateTime.UtcNow;
        public DateTime? ApprovedAt { get; set; }
        public DateTime? ExecutedAt { get; set; }
        public Dictionary<string, object> GeneratedContent { get; set; } = new();
        public List<string> ExecutionLog { get; set; } = new();
    }

    /// <summary>
    /// Campaign execution status
    /// </summary>
    public enum CampaignStatus
    {
        Draft,
        InProgress,
        ReadyForApproval,
        Approved,
        Executed,
        Failed
    }

    /// <summary>
    /// Represents a campaign execution plan
    /// </summary>
    public class CampaignPlan
    {
        public string CampaignId { get; set; } = string.Empty;
        public List<PlanStep> Steps { get; set; } = new();
        public int CurrentStepIndex { get; set; } = 0;
        public DateTime CreatedAt { get; set; } = DateTime.UtcNow;
        public string Context { get; set; } = string.Empty;
    }

    /// <summary>
    /// Individual step in a campaign plan
    /// </summary>
    public class PlanStep
    {
        public string Id { get; set; } = Guid.NewGuid().ToString();
        public string Name { get; set; } = string.Empty;
        public string Description { get; set; } = string.Empty;
        public string AgentType { get; set; } = string.Empty;
        public string Function { get; set; } = string.Empty;
        public Dictionary<string, object> Parameters { get; set; } = new();
        public bool IsCompleted { get; set; } = false;
        public DateTime? CompletedAt { get; set; }
        public object? Result { get; set; }
        public bool RequiresApproval { get; set; } = false;
    }

    /// <summary>
    /// Mock customer data for research agent
    /// </summary>
    public class Customer
    {
        public string Id { get; set; } = string.Empty;
        public string Name { get; set; } = string.Empty;
        public string Email { get; set; } = string.Empty;
        public string Segment { get; set; } = string.Empty;
        public decimal Revenue { get; set; }
        public List<string> Interests { get; set; } = new();
        public Dictionary<string, object> Attributes { get; set; } = new();
        public DateTime LastEngagement { get; set; } = DateTime.UtcNow;
    }

    /// <summary>
    /// Customer insights generated by research agent
    /// </summary>
    public class CustomerInsights
    {
        public string Audience { get; set; } = string.Empty;
        public List<Customer> Customers { get; set; } = new();
        public Dictionary<string, object> Insights { get; set; } = new();
        public List<string> Recommendations { get; set; } = new();
        public DateTime GeneratedAt { get; set; } = DateTime.UtcNow;
    }

    /// <summary>
    /// Campaign session state for persistence
    /// </summary>
    public class CampaignSession
    {
        public string Id { get; set; } = Guid.NewGuid().ToString();
        public Campaign Campaign { get; set; } = new();
        public CampaignPlan? Plan { get; set; }
        public CustomerInsights? Insights { get; set; }
        public string CurrentContext { get; set; } = string.Empty;
        public DateTime LastUpdated { get; set; } = DateTime.UtcNow;
        public bool IsActive { get; set; } = true;
    }
}
